Grammar

    0 $accept: prog_start $end

    1 prog_start: prog_start func_start
    2           | func_start

    3 func_start: function identifier semicolon beginparams dt_loop endparams beginlocals dt_loop endlocals beginbody s_loop endbody

    4 dt_loop: d_loop
    5        | /* empty */

    6 d_loop: d_loop declaration semicolon
    7       | declaration semicolon

    8 s_loop: s_loop statement semicolon
    9       | statement semicolon

   10 declaration: id_loop colon integer
   11            | id_loop colon array l_bracket number r_bracket of integer

   12 id_loop: id_loop identifier comma
   13        | identifier

   14 bool_expr: relation_and_expr
   15          | relation_and_expr b_loop

   16 b_loop: b_loop or relation_and_expr
   17       | or relation_and_expr

   18 relation_and_expr: relation_expr
   19                  | relation_expr r_loop

   20 r_loop: r_loop and relation_expr
   21       | and relation_expr

   22 relation_expr: r_block
   23              | not r_block

   24 r_block: expression comp expression
   25        | true
   26        | false
   27        | l_paren bool_expr r_paren

   28 expression: mutiplicative_expr
   29           | mutiplicative_expr e_loop

   30 e_loop: e_loop add mutiplicative_expr
   31       | e_loop sub mutiplicative_expr
   32       | add mutiplicative_expr
   33       | sub mutiplicative_expr

   34 mutiplicative_expr: term
   35                   | term m_loop

   36 m_loop: m_loop mult term
   37       | m_loop div term
   38       | m_loop mod term
   39       | mult term
   40       | div term
   41       | mod term

   42 term: sub term_b1
   43     | term_b1
   44     | term_b2

   45 term_b1: var
   46        | number
   47        | l_paren expression r_paren

   48 term_b2: identifier l_paren r_paren
   49        | identifier l_paren t_loop r_paren

   50 t_loop: expression
   51       | expression comma t_loop

   52 statement: var assign expression
   53          | continue
   54          | return expression
   55          | read var_loop
   56          | write var_loop
   57          | do beginloop s_loop endloop while bool_expr
   58          | while bool_expr beginloop s_loop bool_expr
   59          | if bool_expr then s_loop if_loop

   60 if_loop: endif
   61        | else s_loop endif

   62 var_loop: var comma var_loop
   63         | var

   64 comp: eq
   65     | neq
   66     | lt
   67     | gt
   68     | lte
   69     | gte

   70 var: identifier
   71    | identifier l_bracket expression r_bracket

   72 function: FUNCTION

   73 continue: CONTINUE

   74 return: RETURN

   75 read: READ

   76 while: WHILE

   77 do: DO

   78 if: IF

   79 then: THEN

   80 else: ELSE

   81 endif: ENDIF

   82 beginloop: BEGINLOOP

   83 endloop: ENDLOOP

   84 write: WRITE

   85 identifier: IDENT

   86 number: NUMBER

   87 semicolon: SEMICOLON

   88 assign: ASSIGN

   89 colon: COLON

   90 of: OF

   91 or: OR

   92 and: AND

   93 add: ADD

   94 sub: SUB

   95 mult: MULT

   96 div: DIV

   97 mod: MOD

   98 not: NOT

   99 true: TRUE

  100 false: FALSE

  101 l_paren: L_PAREN

  102 r_paren: R_PAREN

  103 comma: COMMA

  104 beginparams: BEGIN_PARAMS

  105 endparams: END_PARAMS

  106 beginlocals: BEGIN_LOCALS

  107 endlocals: END_LOCALS

  108 beginbody: BEGIN_BODY

  109 endbody: END_BODY

  110 integer: INTEGER

  111 l_bracket: L_SQUARE_BRACKET

  112 r_bracket: R_SQUARE_BRACKET

  113 array: ARRAY

  114 eq: EQ

  115 neq: NEQ

  116 lt: LT

  117 gt: GT

  118 lte: LTE

  119 gte: GTE


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 72
BEGIN_PARAMS (259) 104
END_PARAMS (260) 105
BEGIN_LOCALS (261) 106
END_LOCALS (262) 107
BEGIN_BODY (263) 108
END_BODY (264) 109
INTEGER (265) 110
ARRAY (266) 113
OF (267) 90
IF (268) 78
THEN (269) 79
ENDIF (270) 81
ELSE (271) 80
WHILE (272) 76
DO (273) 77
BEGINLOOP (274) 82
ENDLOOP (275) 83
CONTINUE (276) 73
READ (277) 75
WRITE (278) 84
AND (279) 92
OR (280) 91
NOT (281) 98
TRUE (282) 99
FALSE (283) 100
RETURN (284) 74
SUB (285) 94
ADD (286) 93
MULT (287) 95
DIV (288) 96
MOD (289) 97
EQ (290) 114
NEQ (291) 115
LT (292) 116
GT (293) 117
LTE (294) 118
GTE (295) 119
NUMBER (296) 86
IDENT (297) 85
SEMICOLON (298) 87
COLON (299) 89
COMMA (300) 103
L_PAREN (301) 101
R_PAREN (302) 102
L_SQUARE_BRACKET (303) 111
R_SQUARE_BRACKET (304) 112
ASSIGN (305) 88


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1 2, on right: 0 1
func_start (53)
    on left: 3, on right: 1 2
dt_loop (54)
    on left: 4 5, on right: 3
d_loop (55)
    on left: 6 7, on right: 4 6
s_loop (56)
    on left: 8 9, on right: 3 8 57 58 59 61
declaration (57)
    on left: 10 11, on right: 6 7
id_loop (58)
    on left: 12 13, on right: 10 11 12
bool_expr (59)
    on left: 14 15, on right: 27 57 58 59
b_loop (60)
    on left: 16 17, on right: 15 16
relation_and_expr (61)
    on left: 18 19, on right: 14 15 16 17
r_loop (62)
    on left: 20 21, on right: 19 20
relation_expr (63)
    on left: 22 23, on right: 18 19 20 21
r_block (64)
    on left: 24 25 26 27, on right: 22 23
expression (65)
    on left: 28 29, on right: 24 47 50 51 52 54 71
e_loop (66)
    on left: 30 31 32 33, on right: 29 30 31
mutiplicative_expr (67)
    on left: 34 35, on right: 28 29 30 31 32 33
m_loop (68)
    on left: 36 37 38 39 40 41, on right: 35 36 37 38
term (69)
    on left: 42 43 44, on right: 34 35 36 37 38 39 40 41
term_b1 (70)
    on left: 45 46 47, on right: 42 43
term_b2 (71)
    on left: 48 49, on right: 44
t_loop (72)
    on left: 50 51, on right: 49 51
statement (73)
    on left: 52 53 54 55 56 57 58 59, on right: 8 9
if_loop (74)
    on left: 60 61, on right: 59
var_loop (75)
    on left: 62 63, on right: 55 56 62
comp (76)
    on left: 64 65 66 67 68 69, on right: 24
var (77)
    on left: 70 71, on right: 45 52 62 63
function (78)
    on left: 72, on right: 3
continue (79)
    on left: 73, on right: 53
return (80)
    on left: 74, on right: 54
read (81)
    on left: 75, on right: 55
while (82)
    on left: 76, on right: 57 58
do (83)
    on left: 77, on right: 57
if (84)
    on left: 78, on right: 59
then (85)
    on left: 79, on right: 59
else (86)
    on left: 80, on right: 61
endif (87)
    on left: 81, on right: 60 61
beginloop (88)
    on left: 82, on right: 57 58
endloop (89)
    on left: 83, on right: 57
write (90)
    on left: 84, on right: 56
identifier (91)
    on left: 85, on right: 3 12 13 48 49 70 71
number (92)
    on left: 86, on right: 11 46
semicolon (93)
    on left: 87, on right: 3 6 7 8 9
assign (94)
    on left: 88, on right: 52
colon (95)
    on left: 89, on right: 10 11
of (96)
    on left: 90, on right: 11
or (97)
    on left: 91, on right: 16 17
and (98)
    on left: 92, on right: 20 21
add (99)
    on left: 93, on right: 30 32
sub (100)
    on left: 94, on right: 31 33 42
mult (101)
    on left: 95, on right: 36 39
div (102)
    on left: 96, on right: 37 40
mod (103)
    on left: 97, on right: 38 41
not (104)
    on left: 98, on right: 23
true (105)
    on left: 99, on right: 25
false (106)
    on left: 100, on right: 26
l_paren (107)
    on left: 101, on right: 27 47 48 49
r_paren (108)
    on left: 102, on right: 27 47 48 49
comma (109)
    on left: 103, on right: 12 51 62
beginparams (110)
    on left: 104, on right: 3
endparams (111)
    on left: 105, on right: 3
beginlocals (112)
    on left: 106, on right: 3
endlocals (113)
    on left: 107, on right: 3
beginbody (114)
    on left: 108, on right: 3
endbody (115)
    on left: 109, on right: 3
integer (116)
    on left: 110, on right: 10 11
l_bracket (117)
    on left: 111, on right: 11 71
r_bracket (118)
    on left: 112, on right: 11 71
array (119)
    on left: 113, on right: 11
eq (120)
    on left: 114, on right: 64
neq (121)
    on left: 115, on right: 65
lt (122)
    on left: 116, on right: 66
gt (123)
    on left: 117, on right: 67
lte (124)
    on left: 118, on right: 68
gte (125)
    on left: 119, on right: 69


state 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    prog_start  go to state 2
    func_start  go to state 3
    function    go to state 4


state 1

   72 function: FUNCTION .

    $default  reduce using rule 72 (function)


state 2

    0 $accept: prog_start . $end
    1 prog_start: prog_start . func_start

    $end      shift, and go to state 5
    FUNCTION  shift, and go to state 1

    func_start  go to state 6
    function    go to state 4


state 3

    2 prog_start: func_start .

    $default  reduce using rule 2 (prog_start)


state 4

    3 func_start: function . identifier semicolon beginparams dt_loop endparams beginlocals dt_loop endlocals beginbody s_loop endbody

    IDENT  shift, and go to state 7

    identifier  go to state 8


state 5

    0 $accept: prog_start $end .

    $default  accept


state 6

    1 prog_start: prog_start func_start .

    $default  reduce using rule 1 (prog_start)


state 7

   85 identifier: IDENT .

    $default  reduce using rule 85 (identifier)


state 8

    3 func_start: function identifier . semicolon beginparams dt_loop endparams beginlocals dt_loop endlocals beginbody s_loop endbody

    SEMICOLON  shift, and go to state 9

    semicolon  go to state 10


state 9

   87 semicolon: SEMICOLON .

    $default  reduce using rule 87 (semicolon)


state 10

    3 func_start: function identifier semicolon . beginparams dt_loop endparams beginlocals dt_loop endlocals beginbody s_loop endbody

    BEGIN_PARAMS  shift, and go to state 11

    beginparams  go to state 12


state 11

  104 beginparams: BEGIN_PARAMS .

    $default  reduce using rule 104 (beginparams)


state 12

    3 func_start: function identifier semicolon beginparams . dt_loop endparams beginlocals dt_loop endlocals beginbody s_loop endbody

    IDENT  shift, and go to state 7

    $default  reduce using rule 5 (dt_loop)

    dt_loop      go to state 13
    d_loop       go to state 14
    declaration  go to state 15
    id_loop      go to state 16
    identifier   go to state 17


state 13

    3 func_start: function identifier semicolon beginparams dt_loop . endparams beginlocals dt_loop endlocals beginbody s_loop endbody

    END_PARAMS  shift, and go to state 18

    endparams  go to state 19


state 14

    4 dt_loop: d_loop .
    6 d_loop: d_loop . declaration semicolon

    IDENT  shift, and go to state 7

    $default  reduce using rule 4 (dt_loop)

    declaration  go to state 20
    id_loop      go to state 16
    identifier   go to state 17


state 15

    7 d_loop: declaration . semicolon

    SEMICOLON  shift, and go to state 9

    semicolon  go to state 21


state 16

   10 declaration: id_loop . colon integer
   11            | id_loop . colon array l_bracket number r_bracket of integer
   12 id_loop: id_loop . identifier comma

    IDENT  shift, and go to state 7
    COLON  shift, and go to state 22

    identifier  go to state 23
    colon       go to state 24


state 17

   13 id_loop: identifier .

    $default  reduce using rule 13 (id_loop)


state 18

  105 endparams: END_PARAMS .

    $default  reduce using rule 105 (endparams)


state 19

    3 func_start: function identifier semicolon beginparams dt_loop endparams . beginlocals dt_loop endlocals beginbody s_loop endbody

    BEGIN_LOCALS  shift, and go to state 25

    beginlocals  go to state 26


state 20

    6 d_loop: d_loop declaration . semicolon

    SEMICOLON  shift, and go to state 9

    semicolon  go to state 27


state 21

    7 d_loop: declaration semicolon .

    $default  reduce using rule 7 (d_loop)


state 22

   89 colon: COLON .

    $default  reduce using rule 89 (colon)


state 23

   12 id_loop: id_loop identifier . comma

    COMMA  shift, and go to state 28

    comma  go to state 29


state 24

   10 declaration: id_loop colon . integer
   11            | id_loop colon . array l_bracket number r_bracket of integer

    INTEGER  shift, and go to state 30
    ARRAY    shift, and go to state 31

    integer  go to state 32
    array    go to state 33


state 25

  106 beginlocals: BEGIN_LOCALS .

    $default  reduce using rule 106 (beginlocals)


state 26

    3 func_start: function identifier semicolon beginparams dt_loop endparams beginlocals . dt_loop endlocals beginbody s_loop endbody

    IDENT  shift, and go to state 7

    $default  reduce using rule 5 (dt_loop)

    dt_loop      go to state 34
    d_loop       go to state 14
    declaration  go to state 15
    id_loop      go to state 16
    identifier   go to state 17


state 27

    6 d_loop: d_loop declaration semicolon .

    $default  reduce using rule 6 (d_loop)


state 28

  103 comma: COMMA .

    $default  reduce using rule 103 (comma)


state 29

   12 id_loop: id_loop identifier comma .

    $default  reduce using rule 12 (id_loop)


state 30

  110 integer: INTEGER .

    $default  reduce using rule 110 (integer)


state 31

  113 array: ARRAY .

    $default  reduce using rule 113 (array)


state 32

   10 declaration: id_loop colon integer .

    $default  reduce using rule 10 (declaration)


state 33

   11 declaration: id_loop colon array . l_bracket number r_bracket of integer

    L_SQUARE_BRACKET  shift, and go to state 35

    l_bracket  go to state 36


state 34

    3 func_start: function identifier semicolon beginparams dt_loop endparams beginlocals dt_loop . endlocals beginbody s_loop endbody

    END_LOCALS  shift, and go to state 37

    endlocals  go to state 38


state 35

  111 l_bracket: L_SQUARE_BRACKET .

    $default  reduce using rule 111 (l_bracket)


state 36

   11 declaration: id_loop colon array l_bracket . number r_bracket of integer

    NUMBER  shift, and go to state 39

    number  go to state 40


state 37

  107 endlocals: END_LOCALS .

    $default  reduce using rule 107 (endlocals)


state 38

    3 func_start: function identifier semicolon beginparams dt_loop endparams beginlocals dt_loop endlocals . beginbody s_loop endbody

    BEGIN_BODY  shift, and go to state 41

    beginbody  go to state 42


state 39

   86 number: NUMBER .

    $default  reduce using rule 86 (number)


state 40

   11 declaration: id_loop colon array l_bracket number . r_bracket of integer

    R_SQUARE_BRACKET  shift, and go to state 43

    r_bracket  go to state 44


state 41

  108 beginbody: BEGIN_BODY .

    $default  reduce using rule 108 (beginbody)


state 42

    3 func_start: function identifier semicolon beginparams dt_loop endparams beginlocals dt_loop endlocals beginbody . s_loop endbody

    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    s_loop      go to state 52
    statement   go to state 53
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    write       go to state 61
    identifier  go to state 62


state 43

  112 r_bracket: R_SQUARE_BRACKET .

    $default  reduce using rule 112 (r_bracket)


state 44

   11 declaration: id_loop colon array l_bracket number r_bracket . of integer

    OF  shift, and go to state 63

    of  go to state 64


state 45

   78 if: IF .

    $default  reduce using rule 78 (if)


state 46

   76 while: WHILE .

    $default  reduce using rule 76 (while)


state 47

   77 do: DO .

    $default  reduce using rule 77 (do)


state 48

   73 continue: CONTINUE .

    $default  reduce using rule 73 (continue)


state 49

   75 read: READ .

    $default  reduce using rule 75 (read)


state 50

   84 write: WRITE .

    $default  reduce using rule 84 (write)


state 51

   74 return: RETURN .

    $default  reduce using rule 74 (return)


state 52

    3 func_start: function identifier semicolon beginparams dt_loop endparams beginlocals dt_loop endlocals beginbody s_loop . endbody
    8 s_loop: s_loop . statement semicolon

    END_BODY  shift, and go to state 65
    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    statement   go to state 66
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    write       go to state 61
    identifier  go to state 62
    endbody     go to state 67


state 53

    9 s_loop: statement . semicolon

    SEMICOLON  shift, and go to state 9

    semicolon  go to state 68


state 54

   52 statement: var . assign expression

    ASSIGN  shift, and go to state 69

    assign  go to state 70


state 55

   53 statement: continue .

    $default  reduce using rule 53 (statement)


state 56

   54 statement: return . expression

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    expression          go to state 73
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 57

   55 statement: read . var_loop

    IDENT  shift, and go to state 7

    var_loop    go to state 83
    var         go to state 84
    identifier  go to state 62


state 58

   58 statement: while . bool_expr beginloop s_loop bool_expr

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    bool_expr           go to state 88
    relation_and_expr   go to state 89
    relation_expr       go to state 90
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 59

   57 statement: do . beginloop s_loop endloop while bool_expr

    BEGINLOOP  shift, and go to state 97

    beginloop  go to state 98


state 60

   59 statement: if . bool_expr then s_loop if_loop

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    bool_expr           go to state 99
    relation_and_expr   go to state 89
    relation_expr       go to state 90
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 61

   56 statement: write . var_loop

    IDENT  shift, and go to state 7

    var_loop    go to state 100
    var         go to state 84
    identifier  go to state 62


state 62

   70 var: identifier .
   71    | identifier . l_bracket expression r_bracket

    L_SQUARE_BRACKET  shift, and go to state 35

    $default  reduce using rule 70 (var)

    l_bracket  go to state 101


state 63

   90 of: OF .

    $default  reduce using rule 90 (of)


state 64

   11 declaration: id_loop colon array l_bracket number r_bracket of . integer

    INTEGER  shift, and go to state 30

    integer  go to state 102


state 65

  109 endbody: END_BODY .

    $default  reduce using rule 109 (endbody)


state 66

    8 s_loop: s_loop statement . semicolon

    SEMICOLON  shift, and go to state 9

    semicolon  go to state 103


state 67

    3 func_start: function identifier semicolon beginparams dt_loop endparams beginlocals dt_loop endlocals beginbody s_loop endbody .

    $default  reduce using rule 3 (func_start)


state 68

    9 s_loop: statement semicolon .

    $default  reduce using rule 9 (s_loop)


state 69

   88 assign: ASSIGN .

    $default  reduce using rule 88 (assign)


state 70

   52 statement: var assign . expression

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    expression          go to state 104
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 71

   94 sub: SUB .

    $default  reduce using rule 94 (sub)


state 72

  101 l_paren: L_PAREN .

    $default  reduce using rule 101 (l_paren)


state 73

   54 statement: return expression .

    $default  reduce using rule 54 (statement)


state 74

   28 expression: mutiplicative_expr .
   29           | mutiplicative_expr . e_loop

    SUB  shift, and go to state 71
    ADD  shift, and go to state 105

    $default  reduce using rule 28 (expression)

    e_loop  go to state 106
    add     go to state 107
    sub     go to state 108


state 75

   34 mutiplicative_expr: term .
   35                   | term . m_loop

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 34 (mutiplicative_expr)

    m_loop  go to state 112
    mult    go to state 113
    div     go to state 114
    mod     go to state 115


state 76

   43 term: term_b1 .

    $default  reduce using rule 43 (term)


state 77

   44 term: term_b2 .

    $default  reduce using rule 44 (term)


state 78

   45 term_b1: var .

    $default  reduce using rule 45 (term_b1)


state 79

   48 term_b2: identifier . l_paren r_paren
   49        | identifier . l_paren t_loop r_paren
   70 var: identifier .
   71    | identifier . l_bracket expression r_bracket

    L_PAREN           shift, and go to state 72
    L_SQUARE_BRACKET  shift, and go to state 35

    $default  reduce using rule 70 (var)

    l_paren    go to state 116
    l_bracket  go to state 101


state 80

   46 term_b1: number .

    $default  reduce using rule 46 (term_b1)


state 81

   42 term: sub . term_b1

    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    term_b1     go to state 117
    var         go to state 78
    identifier  go to state 62
    number      go to state 80
    l_paren     go to state 82


state 82

   47 term_b1: l_paren . expression r_paren

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    expression          go to state 118
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 83

   55 statement: read var_loop .

    $default  reduce using rule 55 (statement)


state 84

   62 var_loop: var . comma var_loop
   63         | var .

    COMMA  shift, and go to state 28

    $default  reduce using rule 63 (var_loop)

    comma  go to state 119


state 85

   98 not: NOT .

    $default  reduce using rule 98 (not)


state 86

   99 true: TRUE .

    $default  reduce using rule 99 (true)


state 87

  100 false: FALSE .

    $default  reduce using rule 100 (false)


state 88

   58 statement: while bool_expr . beginloop s_loop bool_expr

    BEGINLOOP  shift, and go to state 97

    beginloop  go to state 120


state 89

   14 bool_expr: relation_and_expr .
   15          | relation_and_expr . b_loop

    OR  shift, and go to state 121

    $default  reduce using rule 14 (bool_expr)

    b_loop  go to state 122
    or      go to state 123


state 90

   18 relation_and_expr: relation_expr .
   19                  | relation_expr . r_loop

    AND  shift, and go to state 124

    $default  reduce using rule 18 (relation_and_expr)

    r_loop  go to state 125
    and     go to state 126


state 91

   22 relation_expr: r_block .

    $default  reduce using rule 22 (relation_expr)


state 92

   24 r_block: expression . comp expression

    EQ   shift, and go to state 127
    NEQ  shift, and go to state 128
    LT   shift, and go to state 129
    GT   shift, and go to state 130
    LTE  shift, and go to state 131
    GTE  shift, and go to state 132

    comp  go to state 133
    eq    go to state 134
    neq   go to state 135
    lt    go to state 136
    gt    go to state 137
    lte   go to state 138
    gte   go to state 139


state 93

   23 relation_expr: not . r_block

    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    r_block             go to state 140
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 94

   25 r_block: true .

    $default  reduce using rule 25 (r_block)


state 95

   26 r_block: false .

    $default  reduce using rule 26 (r_block)


state 96

   27 r_block: l_paren . bool_expr r_paren
   47 term_b1: l_paren . expression r_paren

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    bool_expr           go to state 141
    relation_and_expr   go to state 89
    relation_expr       go to state 90
    r_block             go to state 91
    expression          go to state 142
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 97

   82 beginloop: BEGINLOOP .

    $default  reduce using rule 82 (beginloop)


state 98

   57 statement: do beginloop . s_loop endloop while bool_expr

    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    s_loop      go to state 143
    statement   go to state 53
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    write       go to state 61
    identifier  go to state 62


state 99

   59 statement: if bool_expr . then s_loop if_loop

    THEN  shift, and go to state 144

    then  go to state 145


state 100

   56 statement: write var_loop .

    $default  reduce using rule 56 (statement)


state 101

   71 var: identifier l_bracket . expression r_bracket

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    expression          go to state 146
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 102

   11 declaration: id_loop colon array l_bracket number r_bracket of integer .

    $default  reduce using rule 11 (declaration)


state 103

    8 s_loop: s_loop statement semicolon .

    $default  reduce using rule 8 (s_loop)


state 104

   52 statement: var assign expression .

    $default  reduce using rule 52 (statement)


state 105

   93 add: ADD .

    $default  reduce using rule 93 (add)


state 106

   29 expression: mutiplicative_expr e_loop .
   30 e_loop: e_loop . add mutiplicative_expr
   31       | e_loop . sub mutiplicative_expr

    SUB  shift, and go to state 71
    ADD  shift, and go to state 105

    $default  reduce using rule 29 (expression)

    add  go to state 147
    sub  go to state 148


state 107

   32 e_loop: add . mutiplicative_expr

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    mutiplicative_expr  go to state 149
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 108

   33 e_loop: sub . mutiplicative_expr

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    mutiplicative_expr  go to state 150
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 109

   95 mult: MULT .

    $default  reduce using rule 95 (mult)


state 110

   96 div: DIV .

    $default  reduce using rule 96 (div)


state 111

   97 mod: MOD .

    $default  reduce using rule 97 (mod)


state 112

   35 mutiplicative_expr: term m_loop .
   36 m_loop: m_loop . mult term
   37       | m_loop . div term
   38       | m_loop . mod term

    MULT  shift, and go to state 109
    DIV   shift, and go to state 110
    MOD   shift, and go to state 111

    $default  reduce using rule 35 (mutiplicative_expr)

    mult  go to state 151
    div   go to state 152
    mod   go to state 153


state 113

   39 m_loop: mult . term

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    term        go to state 154
    term_b1     go to state 76
    term_b2     go to state 77
    var         go to state 78
    identifier  go to state 79
    number      go to state 80
    sub         go to state 81
    l_paren     go to state 82


state 114

   40 m_loop: div . term

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    term        go to state 155
    term_b1     go to state 76
    term_b2     go to state 77
    var         go to state 78
    identifier  go to state 79
    number      go to state 80
    sub         go to state 81
    l_paren     go to state 82


state 115

   41 m_loop: mod . term

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    term        go to state 156
    term_b1     go to state 76
    term_b2     go to state 77
    var         go to state 78
    identifier  go to state 79
    number      go to state 80
    sub         go to state 81
    l_paren     go to state 82


state 116

   48 term_b2: identifier l_paren . r_paren
   49        | identifier l_paren . t_loop r_paren

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72
    R_PAREN  shift, and go to state 157

    expression          go to state 158
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    t_loop              go to state 159
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82
    r_paren             go to state 160


state 117

   42 term: sub term_b1 .

    $default  reduce using rule 42 (term)


state 118

   47 term_b1: l_paren expression . r_paren

    R_PAREN  shift, and go to state 157

    r_paren  go to state 161


state 119

   62 var_loop: var comma . var_loop

    IDENT  shift, and go to state 7

    var_loop    go to state 162
    var         go to state 84
    identifier  go to state 62


state 120

   58 statement: while bool_expr beginloop . s_loop bool_expr

    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    s_loop      go to state 163
    statement   go to state 53
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    write       go to state 61
    identifier  go to state 62


state 121

   91 or: OR .

    $default  reduce using rule 91 (or)


state 122

   15 bool_expr: relation_and_expr b_loop .
   16 b_loop: b_loop . or relation_and_expr

    OR  shift, and go to state 121

    $default  reduce using rule 15 (bool_expr)

    or  go to state 164


state 123

   17 b_loop: or . relation_and_expr

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    relation_and_expr   go to state 165
    relation_expr       go to state 90
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 124

   92 and: AND .

    $default  reduce using rule 92 (and)


state 125

   19 relation_and_expr: relation_expr r_loop .
   20 r_loop: r_loop . and relation_expr

    AND  shift, and go to state 124

    $default  reduce using rule 19 (relation_and_expr)

    and  go to state 166


state 126

   21 r_loop: and . relation_expr

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    relation_expr       go to state 167
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 127

  114 eq: EQ .

    $default  reduce using rule 114 (eq)


state 128

  115 neq: NEQ .

    $default  reduce using rule 115 (neq)


state 129

  116 lt: LT .

    $default  reduce using rule 116 (lt)


state 130

  117 gt: GT .

    $default  reduce using rule 117 (gt)


state 131

  118 lte: LTE .

    $default  reduce using rule 118 (lte)


state 132

  119 gte: GTE .

    $default  reduce using rule 119 (gte)


state 133

   24 r_block: expression comp . expression

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    expression          go to state 168
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 134

   64 comp: eq .

    $default  reduce using rule 64 (comp)


state 135

   65 comp: neq .

    $default  reduce using rule 65 (comp)


state 136

   66 comp: lt .

    $default  reduce using rule 66 (comp)


state 137

   67 comp: gt .

    $default  reduce using rule 67 (comp)


state 138

   68 comp: lte .

    $default  reduce using rule 68 (comp)


state 139

   69 comp: gte .

    $default  reduce using rule 69 (comp)


state 140

   23 relation_expr: not r_block .

    $default  reduce using rule 23 (relation_expr)


state 141

   27 r_block: l_paren bool_expr . r_paren

    R_PAREN  shift, and go to state 157

    r_paren  go to state 169


state 142

   24 r_block: expression . comp expression
   47 term_b1: l_paren expression . r_paren

    EQ       shift, and go to state 127
    NEQ      shift, and go to state 128
    LT       shift, and go to state 129
    GT       shift, and go to state 130
    LTE      shift, and go to state 131
    GTE      shift, and go to state 132
    R_PAREN  shift, and go to state 157

    comp     go to state 133
    r_paren  go to state 161
    eq       go to state 134
    neq      go to state 135
    lt       go to state 136
    gt       go to state 137
    lte      go to state 138
    gte      go to state 139


state 143

    8 s_loop: s_loop . statement semicolon
   57 statement: do beginloop s_loop . endloop while bool_expr

    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    ENDLOOP   shift, and go to state 170
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    statement   go to state 66
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    endloop     go to state 171
    write       go to state 61
    identifier  go to state 62


state 144

   79 then: THEN .

    $default  reduce using rule 79 (then)


state 145

   59 statement: if bool_expr then . s_loop if_loop

    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    s_loop      go to state 172
    statement   go to state 53
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    write       go to state 61
    identifier  go to state 62


state 146

   71 var: identifier l_bracket expression . r_bracket

    R_SQUARE_BRACKET  shift, and go to state 43

    r_bracket  go to state 173


state 147

   30 e_loop: e_loop add . mutiplicative_expr

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    mutiplicative_expr  go to state 174
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 148

   31 e_loop: e_loop sub . mutiplicative_expr

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    mutiplicative_expr  go to state 175
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 149

   32 e_loop: add mutiplicative_expr .

    $default  reduce using rule 32 (e_loop)


state 150

   33 e_loop: sub mutiplicative_expr .

    $default  reduce using rule 33 (e_loop)


state 151

   36 m_loop: m_loop mult . term

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    term        go to state 176
    term_b1     go to state 76
    term_b2     go to state 77
    var         go to state 78
    identifier  go to state 79
    number      go to state 80
    sub         go to state 81
    l_paren     go to state 82


state 152

   37 m_loop: m_loop div . term

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    term        go to state 177
    term_b1     go to state 76
    term_b2     go to state 77
    var         go to state 78
    identifier  go to state 79
    number      go to state 80
    sub         go to state 81
    l_paren     go to state 82


state 153

   38 m_loop: m_loop mod . term

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    term        go to state 178
    term_b1     go to state 76
    term_b2     go to state 77
    var         go to state 78
    identifier  go to state 79
    number      go to state 80
    sub         go to state 81
    l_paren     go to state 82


state 154

   39 m_loop: mult term .

    $default  reduce using rule 39 (m_loop)


state 155

   40 m_loop: div term .

    $default  reduce using rule 40 (m_loop)


state 156

   41 m_loop: mod term .

    $default  reduce using rule 41 (m_loop)


state 157

  102 r_paren: R_PAREN .

    $default  reduce using rule 102 (r_paren)


state 158

   50 t_loop: expression .
   51       | expression . comma t_loop

    COMMA  shift, and go to state 28

    $default  reduce using rule 50 (t_loop)

    comma  go to state 179


state 159

   49 term_b2: identifier l_paren t_loop . r_paren

    R_PAREN  shift, and go to state 157

    r_paren  go to state 180


state 160

   48 term_b2: identifier l_paren r_paren .

    $default  reduce using rule 48 (term_b2)


state 161

   47 term_b1: l_paren expression r_paren .

    $default  reduce using rule 47 (term_b1)


state 162

   62 var_loop: var comma var_loop .

    $default  reduce using rule 62 (var_loop)


state 163

    8 s_loop: s_loop . statement semicolon
   58 statement: while bool_expr beginloop s_loop . bool_expr

    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    NOT       shift, and go to state 85
    TRUE      shift, and go to state 86
    FALSE     shift, and go to state 87
    RETURN    shift, and go to state 51
    SUB       shift, and go to state 71
    NUMBER    shift, and go to state 39
    IDENT     shift, and go to state 7
    L_PAREN   shift, and go to state 72

    bool_expr           go to state 181
    relation_and_expr   go to state 89
    relation_expr       go to state 90
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    statement           go to state 66
    var                 go to state 182
    continue            go to state 55
    return              go to state 56
    read                go to state 57
    while               go to state 58
    do                  go to state 59
    if                  go to state 60
    write               go to state 61
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 164

   16 b_loop: b_loop or . relation_and_expr

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    relation_and_expr   go to state 183
    relation_expr       go to state 90
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 165

   17 b_loop: or relation_and_expr .

    $default  reduce using rule 17 (b_loop)


state 166

   20 r_loop: r_loop and . relation_expr

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    relation_expr       go to state 184
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 167

   21 r_loop: and relation_expr .

    $default  reduce using rule 21 (r_loop)


state 168

   24 r_block: expression comp expression .

    $default  reduce using rule 24 (r_block)


state 169

   27 r_block: l_paren bool_expr r_paren .

    $default  reduce using rule 27 (r_block)


state 170

   83 endloop: ENDLOOP .

    $default  reduce using rule 83 (endloop)


state 171

   57 statement: do beginloop s_loop endloop . while bool_expr

    WHILE  shift, and go to state 46

    while  go to state 185


state 172

    8 s_loop: s_loop . statement semicolon
   59 statement: if bool_expr then s_loop . if_loop

    IF        shift, and go to state 45
    ENDIF     shift, and go to state 186
    ELSE      shift, and go to state 187
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    statement   go to state 66
    if_loop     go to state 188
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    else        go to state 189
    endif       go to state 190
    write       go to state 61
    identifier  go to state 62


state 173

   71 var: identifier l_bracket expression r_bracket .

    $default  reduce using rule 71 (var)


state 174

   30 e_loop: e_loop add mutiplicative_expr .

    $default  reduce using rule 30 (e_loop)


state 175

   31 e_loop: e_loop sub mutiplicative_expr .

    $default  reduce using rule 31 (e_loop)


state 176

   36 m_loop: m_loop mult term .

    $default  reduce using rule 36 (m_loop)


state 177

   37 m_loop: m_loop div term .

    $default  reduce using rule 37 (m_loop)


state 178

   38 m_loop: m_loop mod term .

    $default  reduce using rule 38 (m_loop)


state 179

   51 t_loop: expression comma . t_loop

    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    expression          go to state 158
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    t_loop              go to state 191
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    l_paren             go to state 82


state 180

   49 term_b2: identifier l_paren t_loop r_paren .

    $default  reduce using rule 49 (term_b2)


state 181

   58 statement: while bool_expr beginloop s_loop bool_expr .

    $default  reduce using rule 58 (statement)


state 182

   45 term_b1: var .
   52 statement: var . assign expression

    ASSIGN  shift, and go to state 69

    $default  reduce using rule 45 (term_b1)

    assign  go to state 70


state 183

   16 b_loop: b_loop or relation_and_expr .

    $default  reduce using rule 16 (b_loop)


state 184

   20 r_loop: r_loop and relation_expr .

    $default  reduce using rule 20 (r_loop)


state 185

   57 statement: do beginloop s_loop endloop while . bool_expr

    NOT      shift, and go to state 85
    TRUE     shift, and go to state 86
    FALSE    shift, and go to state 87
    SUB      shift, and go to state 71
    NUMBER   shift, and go to state 39
    IDENT    shift, and go to state 7
    L_PAREN  shift, and go to state 72

    bool_expr           go to state 192
    relation_and_expr   go to state 89
    relation_expr       go to state 90
    r_block             go to state 91
    expression          go to state 92
    mutiplicative_expr  go to state 74
    term                go to state 75
    term_b1             go to state 76
    term_b2             go to state 77
    var                 go to state 78
    identifier          go to state 79
    number              go to state 80
    sub                 go to state 81
    not                 go to state 93
    true                go to state 94
    false               go to state 95
    l_paren             go to state 96


state 186

   81 endif: ENDIF .

    $default  reduce using rule 81 (endif)


state 187

   80 else: ELSE .

    $default  reduce using rule 80 (else)


state 188

   59 statement: if bool_expr then s_loop if_loop .

    $default  reduce using rule 59 (statement)


state 189

   61 if_loop: else . s_loop endif

    IF        shift, and go to state 45
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    s_loop      go to state 193
    statement   go to state 53
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    write       go to state 61
    identifier  go to state 62


state 190

   60 if_loop: endif .

    $default  reduce using rule 60 (if_loop)


state 191

   51 t_loop: expression comma t_loop .

    $default  reduce using rule 51 (t_loop)


state 192

   57 statement: do beginloop s_loop endloop while bool_expr .

    $default  reduce using rule 57 (statement)


state 193

    8 s_loop: s_loop . statement semicolon
   61 if_loop: else s_loop . endif

    IF        shift, and go to state 45
    ENDIF     shift, and go to state 186
    WHILE     shift, and go to state 46
    DO        shift, and go to state 47
    CONTINUE  shift, and go to state 48
    READ      shift, and go to state 49
    WRITE     shift, and go to state 50
    RETURN    shift, and go to state 51
    IDENT     shift, and go to state 7

    statement   go to state 66
    var         go to state 54
    continue    go to state 55
    return      go to state 56
    read        go to state 57
    while       go to state 58
    do          go to state 59
    if          go to state 60
    endif       go to state 194
    write       go to state 61
    identifier  go to state 62


state 194

   61 if_loop: else s_loop endif .

    $default  reduce using rule 61 (if_loop)
